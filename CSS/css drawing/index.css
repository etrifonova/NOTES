/* variables */
:root {
  --color-1: #5f3f5c;
  --color-2: #775972;
  --color-3: #988796;
  --color-light: #ff3e79;
}

input[type="checkbox"].toggle {
  opacity: 0;
  position: absolute;
  left: -9000px;
  top: -9000px;
}

/* positioning above hides the checkbox and lets us interact with it */

input[type="checkbox"].toggle + label {
  position: relative;
  display: flex;
  align-items: center;
  cursor: pointer;
}

input[type="checkbox"].toggle + label::before {
  content: "";
  width: 2em;
  height: 1em;
  background-color: hsl(0, 80%, 90%);
  border-radius: 1em;
  margin-right: 0.25em;
}
input[type="checkbox"].toggle + label::after {
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  left: 0.2em;
  content: "\2715"; /* symbol is added for color-blind people to provide accessibility */
  font-size: 0.5em;
  width: 1.8em;
  height: 1.8em;
  background-color: hsl(0, 80%, 60%);
  color: white;
  border-radius: 1em;
  transition: background-color 200ms ease-in-out, transform 200ms ease-in-out;
  animation: check-fade 200ms ease-in-out reverse forwards;
}

input[type="checkbox"].toggle:focus + label::before {
  outline: 1px solid black;
}

input[type="checkbox"].toggle + label::before {
  background-color: hsl(100, 70%, 90%);
}

input[type="checkbox"].toggle:checked + label::after {
  content: "\2713"; /* symbol is added for color-blind people to provide accessibility */
  /* html entity for symbol codes */
  transform: translateX(100%);
  background-color: hsl(100, 70%, 60%);
}

input[type="checkbox"].toggle:disabled + label {
  color: #777;
}

input[type="checkbox"].toggle:disabled + label::before {
  background-color: #ccc;
}

input[type="checkbox"].toggle:disabled + label::after {
  background-color: #777;
}

h2 {
  font-size: 1.5rem;
  font-weight: 600;
  margin-bottom: 0.3rem;
}

hr {
  margin: 1rem 0 1.5rem;
}

.arrow {
  position: relative;
  width: 2.5rem;
  height: 2.5rem;
  display: inline-block;
}

.arrow::before,
.arrow::after {
  content: "";
  position: absolute;
  background: var(--color-light);
  border-radius: 0.2rem;
  display: block;
}

.arrow::before:hover,
.arrow::after:hover {
  background: var(--color-3);
}

.arrow.left,
.arrow.right {
  width: 1.667em;
}

.arrow.left::before,
.arrow.right::before {
  top: 55%;
}

.arrow.left::after,
.arrow.right::after {
  bottom: 55%;
}
.arrow.left::before,
.arrow.right::before,
.arrow.left::after,
.arrow.right::after {
  left: -5%;
  height: 25%;
  width: 110%;
}

.arrow.up,
.arrow.down {
  height: 1.667em;
}

.arrow.up::before,
.arrow.down::before {
  left: 55%;
}

.arrow.up::after,
.arrow.down::after {
  right: 55%;
}

.arrow.up::before,
.arrow.down::before,
.arrow.up::after,
.arrow.down::after {
  top: -5%;
  height: 110%;
  width: 25%;
}

.arrow.left::before,
.arrow.left::after {
  transform: rotate(45deg);
}

.arrow.left::after {
  transform: rotate(-45deg);
}

.arrow.right::before,
.arrow.right::after {
  transform: rotate(-45deg);
}

.arrow.right::after {
  transform: rotate(45deg);
}

.arrow.up::before,
.arrow.up::after {
  transform: rotate(-45deg);
}

.arrow.up::after {
  transform: rotate(45deg);
}

.arrow.down::before,
.arrow.down::after {
  transform: rotate(45deg);
}

.arrow.down::after {
  transform: rotate(-45deg);
}

/* triangles */

.triangle {
  line-height: 1;
  width: 1.5rem;
  height: 1.5rem;
  border-top-right-radius: 20%;
  background-color: var(--color-light);
  text-align: left;
  display: inline-block;
  margin: 1rem;

  transition: background-color 0.45s ease;

  &:hover {
    background-color: var(--color-1);
  }

  &:before,
  &:after {
    content: "";
    position: absolute;
    background-color: inherit;
    width: 100%;
    height: 100%;
    border-top-right-radius: 20%;
  }

  &.up {
    transform: rotate(60deg) skewX(-30deg) scale(1, 0.866);
    transform-origin: 30% 90%;
  }
  &.down {
    transform: rotate(-120deg) skewX(-30deg) scale(1, 0.866);
    transform-origin: 30% 45%;
  }
  &.left {
    transform: rotate(90deg) skewX(-30deg) scale(1, 0.866);
    transform-origin: 45% 75%;
  }
  &.right {
    transform: rotate(30deg) skewX(-30deg) scale(1, 0.866);
    transform-origin: 45% 75%;
  }

  &:before {
    transform: rotate(-135deg) skewX(-45deg) scale(1.414, 0.707)
      translate(0, -50%);
  }
  &:after {
    transform: rotate(135deg) skewY(-45deg) scale(0.707, 1.414) translate(50%);
  }
}

/* circle in circle */

.circle-1 {
  height: 40px;
  width: 40px;
  border: 5px solid black;
  border-radius: 500px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.circle-2 {
  height: 20px;
  width: 20px;
  border: 5px solid orange;
  border-radius: 500px;
}

/* arrow in circle for Tory's Figma */

.button-circle {
  height: 40px;
  width: 40px;
  border: 2px solid var(--color-light);
  border-radius: 5000px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.button-arrow {
  position: relative;
  width: 0.5rem;
  height: 0.5rem;
  display: inline-block;
}

.button-arrow::before,
.button-arrow::after {
  content: "";
  position: absolute;
  background: var(--color-light);
  border-radius: 0.2rem;
  display: block;
  left: -5%;
  height: 25%;
  width: 110%;
  transform: rotate(-45deg);
}

.button-arrow {
  width: 0.667em;
}

.button-arrow::before {
  top: 80%;
}

.button-arrow::after {
  bottom: 80%;
  transform: rotate(45deg);
}

/* arrow up (hide) for Tory's Figma */

.hide-container {
  height: 40px;
  width: 40px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.hide-arrow {
  position: relative;
  width: 0.5rem;
  height: 0.5rem;
  display: inline-block;
}

.hide-arrow::before,
.hide-arrow::after {
  content: "";
  position: absolute;
  background: var(--color-light);
  border-radius: 0.2rem;
  display: block;
  left: -5%;
  height: 25%;
  width: 110%;
  transform: rotate(-45deg);
}

.hide-arrow {
  width: 0.667em;
}

.hide-arrow::before {
  top: 80%;
}

.hide-arrow::after {
  bottom: 80%;
  transform: rotate(45deg);
}
